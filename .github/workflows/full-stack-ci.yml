name: 🚀 Full Stack CI/CD Pipeline

on:
  push:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'backend/**'
      - 'helm/**'
      - '.github/workflows/full-stack-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'src/**'
      - 'backend/**'
      - 'helm/**'

env:
  REGISTRY: ghcr.io
  FRONTEND_IMAGE: ${{ github.repository }}/frontend
  BACKEND_IMAGE: ${{ github.repository }}/backend

jobs:
  detect-changes:
    name: 🔍 Detect Changes
    runs-on: ubuntu-latest
    outputs:
      frontend-changed: ${{ steps.changes.outputs.frontend }}
      backend-changed: ${{ steps.changes.outputs.backend }}
      helm-changed: ${{ steps.changes.outputs.helm }}
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Detect changes
        uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            frontend:
              - 'src/**'
              - 'angular.json'
              - 'package.json'
              - 'Dockerfile'
            backend:
              - 'backend/**'
            helm:
              - 'helm/**'

  frontend-build:
    name: 🎨 Frontend Build & Deploy
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend-changed == 'true'
    
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🏗️ Build Angular application
        run: npm run build

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.FRONTEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: 🔨 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: 🔄 Update Helm values
        if: github.ref == 'refs/heads/main'
        run: |
          NEW_TAG="main-${{ github.sha }}"
          sed -i "/frontend:/,/backend:/ { /tag:/ s|tag: .*|tag: $NEW_TAG|; }" helm/auth-stack/values.yaml

  backend-build:
    name: 🔧 Backend Build & Deploy
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.backend-changed == 'true'
    
    permissions:
      contents: write
      packages: write
      id-token: write
      security-events: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔧 Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: 📦 Install dependencies
        working-directory: ./backend
        run: npm ci

      - name: 🔐 Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE }}
          tags: |
            type=ref,event=branch
            type=sha,prefix={{branch}}-

      - name: 🔨 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: 🔄 Update Helm values
        if: github.ref == 'refs/heads/main'
        run: |
          NEW_TAG="main-${{ github.sha }}"
          sed -i "/backend:/,/mariadb:/ { /tag:/ s|tag: .*|tag: $NEW_TAG|; }" helm/auth-stack/values.yaml

  deploy:
    name: 🚀 Deploy to Kubernetes
    runs-on: ubuntu-latest
    needs: [detect-changes, frontend-build, backend-build]
    if: always() && (needs.frontend-build.result == 'success' || needs.backend-build.result == 'success' || needs.detect-changes.outputs.helm-changed == 'true')
    
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: 🔄 Pull latest changes
        run: git pull origin main

      - name: 📤 Commit updated manifests
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          if git diff --quiet helm/auth-stack/values.yaml; then
            echo "ℹ️ No changes to commit"
          else
            git add helm/auth-stack/values.yaml
            git commit -m "🤖 Update application images to ${{ github.sha }} - Full stack deployment"
            git push
            echo "✅ Pushed updated manifests - ArgoCD will now pull changes"
          fi
