name: 🏗️ Infrastructure Deployment

on:
  push:
    branches: [ main ]
    paths:
      - 'infrastructure/**'
      - '.github/workflows/infrastructure-deploy.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'infrastructure/**'
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform'
        required: true
        default: 'plan'
        type: choice
        options:
        - plan
        - apply
        - destroy

env:
  TF_VAR_do_token: ${{ secrets.DIGITALOCEAN_TOKEN }}
  TF_VAR_region: "nyc1"
  TF_VAR_cluster_name: "auth-stack-cluster"

jobs:
  infrastructure:
    name: 🏗️ Infrastructure Management
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: infrastructure
    
    outputs:
      kubeconfig: ${{ steps.kubeconfig.outputs.config }}
      cluster_endpoint: ${{ steps.outputs.outputs.cluster_endpoint }}
      
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🔧 Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: 1.6.0

      - name: 🔐 Configure Digital Ocean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_TOKEN }}

      - name: 🏗️ Initialize OpenTofu
        run: tofu init

      - name: 🔍 Validate OpenTofu
        run: tofu validate

      - name: 📋 Plan Infrastructure
        id: plan
        run: |
          tofu plan -no-color -out=tfplan
          echo "plan_output<<EOF" >> $GITHUB_OUTPUT
          tofu show -no-color tfplan >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 💬 Comment PR with Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `## 🏗️ Infrastructure Plan
            
            \`\`\`
            ${{ steps.plan.outputs.plan_output }}
            \`\`\`
            
            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: 🚀 Apply Infrastructure
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: tofu apply -auto-approve tfplan

      - name: 💥 Destroy Infrastructure
        if: github.event.inputs.action == 'destroy'
        run: tofu destroy -auto-approve

      - name: 📤 Get Cluster Outputs
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        id: outputs
        run: |
          echo "cluster_endpoint=$(tofu output -raw cluster_endpoint)" >> $GITHUB_OUTPUT
          echo "cluster_id=$(tofu output -raw cluster_id)" >> $GITHUB_OUTPUT

      - name: 📤 Save Kubeconfig
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        id: kubeconfig
        run: |
          mkdir -p ~/.kube
          doctl kubernetes cluster kubeconfig save $(tofu output -raw cluster_id)
          echo "config<<EOF" >> $GITHUB_OUTPUT
          cat ~/.kube/config >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: 🧪 Test Cluster Connection
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: |
          kubectl version --client
          kubectl get nodes
          kubectl cluster-info

      - name: 📊 Infrastructure Summary
        if: github.event.inputs.action == 'apply' || github.event_name == 'push'
        run: |
          echo "## 🏗️ Infrastructure Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Infrastructure deployed successfully**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📋 **Resources Created:**" >> $GITHUB_STEP_SUMMARY
          echo "- Kubernetes Cluster: \`$(tofu output -raw cluster_name)\`" >> $GITHUB_STEP_SUMMARY
          echo "- Region: \`$(tofu output -raw cluster_region)\`" >> $GITHUB_STEP_SUMMARY
          echo "- Node Count: \`$(tofu output -raw node_count)\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "☸️ **Cluster Status:**" >> $GITHUB_STEP_SUMMARY
          kubectl get nodes >> $GITHUB_STEP_SUMMARY