name: 📊 Monitoring Stack CI/CD

on:
  push:
    branches: [ main ]
    paths:
      - 'helm/monitoring-stack/**'
      - '.github/workflows/monitoring-ci.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'helm/monitoring-stack/**'

env:
  MONITORING_NAMESPACE: monitoring
  AUTH_NAMESPACE: auth-app

jobs:
  validate-monitoring:
    name: 🔍 Validate Monitoring Configuration
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: 📊 Add Helm repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

      - name: 🔍 Validate Helm chart
        run: |
          cd helm/monitoring-stack
          helm dependency update
          helm lint .
          helm template monitoring-stack . --debug

      - name: 🧪 Test Helm values
        run: |
          cd helm/monitoring-stack
          helm template monitoring-stack . \
            --set prometheus.enabled=true \
            --set grafana.standalone.enabled=false \
            --dry-run

  deploy-monitoring:
    name: 🚀 Deploy Monitoring Stack
    runs-on: ubuntu-latest
    needs: validate-monitoring
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: ⚙️ Configure kubectl
        run: |
          # This would be configured with your cluster credentials
          # For now, we'll just validate the manifests
          echo "Kubectl configuration would go here"

      - name: 📊 Add Helm repositories
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

      - name: 🏗️ Update Helm dependencies
        run: |
          cd helm/monitoring-stack
          helm dependency update

      - name: 🚀 Deploy monitoring stack (dry-run)
        run: |
          cd helm/monitoring-stack
          helm upgrade --install monitoring-stack . \
            --namespace ${{ env.MONITORING_NAMESPACE }} \
            --create-namespace \
            --dry-run \
            --debug

      - name: 📈 Generate monitoring report
        run: |
          echo "## 📊 Monitoring Stack Deployment Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Components Deployed:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Prometheus (metrics collection)" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Grafana (visualization)" >> $GITHUB_STEP_SUMMARY
          echo "- 🚨 AlertManager (notifications)" >> $GITHUB_STEP_SUMMARY
          echo "- 📈 Node Exporter (system metrics)" >> $GITHUB_STEP_SUMMARY
          echo "- 🎯 ServiceMonitors (application metrics)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔗 Access Information:" >> $GITHUB_STEP_SUMMARY
          echo "- **Grafana**: Port-forward to access dashboards" >> $GITHUB_STEP_SUMMARY
          echo "- **Prometheus**: Port-forward to access metrics" >> $GITHUB_STEP_SUMMARY
          echo "- **AlertManager**: Port-forward to manage alerts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📋 Next Steps:" >> $GITHUB_STEP_SUMMARY
          echo "1. Run \`kubectl port-forward -n monitoring svc/monitoring-stack-grafana 3001:80\`" >> $GITHUB_STEP_SUMMARY
          echo "2. Access Grafana at http://localhost:3001" >> $GITHUB_STEP_SUMMARY
          echo "3. Login with admin/admin123 (change in production!)" >> $GITHUB_STEP_SUMMARY
          echo "4. Explore pre-configured dashboards" >> $GITHUB_STEP_SUMMARY

  update-auth-stack:
    name: 🔄 Update Auth-Stack with Monitoring
    runs-on: ubuntu-latest
    needs: deploy-monitoring
    if: github.ref == 'refs/heads/main'
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: '3.14.0'

      - name: 🎯 Update auth-stack with monitoring
        run: |
          helm upgrade --install auth-stack helm/auth-stack \
            --namespace ${{ env.AUTH_NAMESPACE }} \
            --set monitoring.enabled=true \
            --set monitoring.serviceMonitor.enabled=true \
            --dry-run \
            --debug

      - name: 📊 Validate ServiceMonitors
        run: |
          echo "Validating ServiceMonitor configurations..."
          cd helm/auth-stack
          helm template auth-stack . \
            --set monitoring.enabled=true \
            --show-only templates/servicemonitor.yaml

  security-scan:
    name: 🔒 Security Scan Monitoring Images
    runs-on: ubuntu-latest
    
    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🔍 Scan Prometheus image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'prom/prometheus:latest'
          format: 'sarif'
          output: 'prometheus-results.sarif'

      - name: 🔍 Scan Grafana image
        uses: aquasecurity/trivy-action@0.24.0
        with:
          image-ref: 'grafana/grafana:latest'
          format: 'sarif'
          output: 'grafana-results.sarif'

      - name: 📊 Upload scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: '.'
