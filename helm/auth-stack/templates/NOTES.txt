ðŸŽ‰ Authentication Stack has been deployed successfully!

Your release is named: {{ .Release.Name }}
Namespace: {{ .Values.namespace.name }}

## ðŸš€ Access Your Application

{{- if .Values.ingress.enabled }}
### Via Ingress:
{{- range $host := .Values.ingress.hosts }}
  Frontend: http://{{ $host.host }}
  Backend API: http://{{ $host.host }}/api
{{- end }}

Add this to your /etc/hosts file for local testing:
  127.0.0.1 {{ (index .Values.ingress.hosts 0).host }}
{{- end }}

### Via Port Forwarding:
```bash
# Frontend (Angular)
kubectl port-forward -n {{ .Values.namespace.name }} svc/frontend-service 8080:{{ .Values.frontend.service.port }}
# Access: http://localhost:8080

# Backend API (Express.js)
kubectl port-forward -n {{ .Values.namespace.name }} svc/backend-service 3000:{{ .Values.backend.service.port }}
# Access: http://localhost:3000

# Database (MariaDB)
kubectl port-forward -n {{ .Values.namespace.name }} svc/mariadb-service 3306:{{ .Values.mariadb.service.port }}
# Connect: mysql -h localhost -P 3306 -u root -p{{ .Values.mariadb.auth.rootPassword }}
```

{{- if eq .Values.frontend.service.type "LoadBalancer" }}
### Via LoadBalancer:
Get the external IP:
```bash
kubectl get svc frontend-service -n {{ .Values.namespace.name }}
```
{{- end }}

## ðŸ“Š Check Status

```bash
# Check all resources
kubectl get all -n {{ .Values.namespace.name }}

# Check pod status
kubectl get pods -n {{ .Values.namespace.name }}

# View logs
kubectl logs -f -l app=backend -n {{ .Values.namespace.name }}
kubectl logs -f -l app=frontend -n {{ .Values.namespace.name }}
kubectl logs -f -l app=mariadb -n {{ .Values.namespace.name }}
```

## ðŸ§ª Test the API

```bash
# Health check
curl http://localhost:3000/health

# Register a user
curl -X POST http://localhost:3000/api/auth/register \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "password123",
    "name": "Test User",
    "role": "user"
  }'

# Login
curl -X POST http://localhost:3000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{
    "email": "test@example.com",
    "password": "password123"
  }'
```

## ðŸ”§ Manage the Deployment

```bash
# Upgrade the release
helm upgrade {{ .Release.Name }} ./helm/auth-stack

# Uninstall the release
helm uninstall {{ .Release.Name }}

# Get release status
helm status {{ .Release.Name }}
```

## ðŸ“š Documentation

For more information, visit:
- Repository: https://github.com/chingnokas/vendor2025-app
- Issues: https://github.com/chingnokas/vendor2025-app/issues

Happy coding! ðŸš€
