# Default values for auth-stack
# This is a YAML-formatted file.

# Global settings
global:
  imageRegistry: ""
  imagePullSecrets: []
  storageClass: ""

# Namespace configuration
namespace:
  create: true
  name: auth-app

# Frontend (Angular) configuration
frontend:
  enabled: true
  replicaCount: 1
  
  image:
    repository: ghcr.io/chingnokas/vendor2025-app/frontend
    tag: main-d0fe401
    pullPolicy: IfNotPresent
  
  service:
    type: LoadBalancer
    port: 8080
    targetPort: 8080
  
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Backend (Express.js) configuration
backend:
  enabled: true
  replicaCount: 1
  
  image:
    repository: ghcr.io/chingnokas/vendor2025-app/backend
    tag: main-latest
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3000
    targetPort: 3000
  
  env:
    NODE_ENV: production
    PORT: "3000"
    DB_HOST: mariadb-service
    DB_USER: root
    DB_NAME: auth_db
  
  # Database password will be read from secret
  secrets:
    dbPassword: root
    jwtSecret: your-super-secret-jwt-key-change-in-production
  
  resources:
    limits:
      cpu: 300m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Health checks
  livenessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
  
  readinessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Database (MariaDB) configuration
mariadb:
  enabled: true
  replicaCount: 1
  
  image:
    repository: mariadb
    tag: "11.0"
    pullPolicy: IfNotPresent
  
  service:
    type: ClusterIP
    port: 3306
    targetPort: 3306
  
  # Database configuration
  auth:
    rootPassword: root
    database: auth_db
    username: auth_user
    password: auth_password
  
  # Persistence configuration
  persistence:
    enabled: true
    storageClass: ""
    accessMode: ReadWriteOnce
    size: 5Gi
  
  # Health checks
  livenessProbe:
    tcpSocket:
      port: 3306
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
  
  readinessProbe:
    tcpSocket:
      port: 3306
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 1
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  nodeSelector: {}
  tolerations: []
  affinity: {}

# Ingress configuration
ingress:
  enabled: true
  className: ""
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization"
  
  hosts:
    - host: auth-app.local
      paths:
        - path: /
          pathType: Prefix
          service: frontend-service
          port: 8080
        - path: /api
          pathType: Prefix
          service: backend-service
          port: 3000
  
  tls: []

# ConfigMap for database initialization
configMap:
  enabled: true
  data:
    schema_sql: |
      CREATE DATABASE IF NOT EXISTS auth_db;
      USE auth_db;

      CREATE TABLE IF NOT EXISTS users (
          id INT AUTO_INCREMENT PRIMARY KEY,
          email VARCHAR(255) NOT NULL UNIQUE,
          password VARCHAR(255) NOT NULL,
          role ENUM('user', 'vendor') DEFAULT 'user',
          name VARCHAR(100),
          reset_token VARCHAR(255) NULL,
          reset_token_expires BIGINT NULL,
          created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
          updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
      );

      CREATE TABLE IF NOT EXISTS refresh_tokens (
          id INT AUTO_INCREMENT PRIMARY KEY,
          user_id INT NOT NULL,
          token VARCHAR(500) NOT NULL,
          expires_at TIMESTAMP NOT NULL,
          FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
      );

# Security context
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# Pod security context
podSecurityContext:
  fsGroup: 1001

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""

# RBAC
rbac:
  create: true

# Network policies
networkPolicy:
  enabled: false

# Pod disruption budget
podDisruptionBudget:
  enabled: false
  minAvailable: 1

# Horizontal Pod Autoscaler
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Monitoring Configuration
monitoring:
  enabled: true
  serviceMonitor:
    enabled: true
    interval: 30s
    scrapeTimeout: 10s
    labels: {}
    annotations: {}

  # Prometheus metrics endpoints
  metrics:
    backend:
      enabled: true
      path: /metrics
      port: 3000
    frontend:
      enabled: true
      path: /metrics
      port: 8080
    database:
      enabled: true
      path: /metrics
      port: 9104  # MySQL exporter port

# Prometheus Rules for Alerting
prometheusRules:
  enabled: true
  rules:
    - alert: AuthBackendDown
      expr: up{job="auth-backend"} == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Auth backend is down"
        description: "Auth backend has been down for more than 1 minute"

    - alert: AuthFrontendDown
      expr: up{job="auth-frontend"} == 0
      for: 1m
      labels:
        severity: critical
      annotations:
        summary: "Auth frontend is down"
        description: "Auth frontend has been down for more than 1 minute"

    - alert: HighResponseTime
      expr: histogram_quantile(0.95, rate(http_request_duration_seconds_bucket{job="auth-backend"}[5m])) > 1
      for: 5m
      labels:
        severity: warning
      annotations:
        summary: "High response time detected"
        description: "95th percentile response time is above 1 second"
