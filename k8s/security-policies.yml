# Pod Security Standards and Network Policies
apiVersion: v1
kind: Namespace
metadata:
  name: auth-app
  labels:
    name: auth-app
    pod-security.kubernetes.io/enforce: restricted
    pod-security.kubernetes.io/audit: restricted
    pod-security.kubernetes.io/warn: restricted
---

# Network Policy - Restrict traffic between pods
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: auth-app-network-policy
  namespace: auth-app
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
  ingress:
    # Allow ingress from ingress controller
    - from:
        - namespaceSelector:
            matchLabels:
              name: ingress-nginx
    # Allow inter-pod communication within namespace
    - from:
        - podSelector: {}
  egress:
    # Allow DNS resolution
    - to: []
      ports:
        - protocol: UDP
          port: 53
    # Allow communication within namespace
    - to:
        - podSelector: {}
    # Allow external HTTPS (for image pulls, etc.)
    - to: []
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
---

# Network Policy - Database access restriction
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mariadb-network-policy
  namespace: auth-app
spec:
  podSelector:
    matchLabels:
      app: mariadb
  policyTypes:
    - Ingress
  ingress:
    # Only allow backend pods to access database
    - from:
        - podSelector:
            matchLabels:
              app: backend
      ports:
        - protocol: TCP
          port: 3306
---

# Pod Disruption Budget for Backend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: backend-pdb
  namespace: auth-app
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: backend
---

# Pod Disruption Budget for Frontend
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: frontend-pdb
  namespace: auth-app
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: frontend
---

# Resource Quota for the namespace
apiVersion: v1
kind: ResourceQuota
metadata:
  name: auth-app-quota
  namespace: auth-app
spec:
  hard:
    requests.cpu: "2"
    requests.memory: 4Gi
    limits.cpu: "4"
    limits.memory: 8Gi
    persistentvolumeclaims: "2"
    pods: "10"
    services: "5"
---

# Note: LimitRange can be added separately if needed
# Example command: kubectl create limitrange auth-app-limits --default=cpu=500m,memory=512Mi --default-request=cpu=100m,memory=128Mi --max=cpu=2,memory=2Gi --min=cpu=50m,memory=64Mi -n auth-app