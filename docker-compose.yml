version: '3.8'

services:
  # MariaDB Database
  mariadb:
    image: mariadb:11.0
    container_name: auth-mariadb
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: auth_db
      MYSQL_USER: auth_user
      MYSQL_PASSWORD: auth_password
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./backend/src/database/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
    networks:
      - auth-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # Express Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: auth-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - DB_HOST=mariadb
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=auth_db
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - PORT=3000
    ports:
      - "3002:3000"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - auth-network
    volumes:
      - ./backend/src:/usr/src/app/src:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Angular Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: auth-frontend
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - backend
    networks:
      - auth-network
    environment:
      - NODE_ENV=development
    volumes:
      - ./src:/app/src:ro
      - ./angular.json:/app/angular.json:ro
      - ./package.json:/app/package.json:ro
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mariadb_data:
    driver: local

networks:
  auth-network:
    driver: bridge
